#include	<stdio.h>
#include	<stdint.h>
#include	<stdlib.h>
#include	<math.h>
#include	<linux/limits.h>
#include	"wav_util.h"

#define DEBUG 1
#define DEFAULT_FS	48000	// Sampling frequency, Unit: [Hz]
#define BITDEPTH	16		// Bitdepth
#define CHANNELS	1		// Number of channels: 1(Mono)
#define MAX_DOT		8		// Character resolution for X and Y, Unit: [dot]
#define DEFAULT_MAX_DRAW_FREQ	23000	// Max frequency to draw message within spectrogram, Unit: [Hz]
#define DEFAULT_MIN_DRAW_FREQ	22000	// Min frequency to draw message within spectrogram, Unit: [Hz]
#define DEFAULT_AUDIOLENGTH		8	// Length of output wavefile, Unit: [s]
#define DEFAULT_CHAR_INTERVAL	0.1	// Interval of each characters within message, Unit: [s]

enum ARGS{
	ARGPOS_RUNTIME,
	ARGPOS_OUTPUTFILENAME,
	ARGPOS_FS,
	ARGPOS_MINFREQ,
	ARGPOS_MAXFREQ,
	ARGPOS_AUDIOLENGTH,
	ARGPOS_INTERVAL,
	ARGPOS_FREETEXT
};

// "STOP WAR " message to draw within spectrogram
uint8_t msg[][MAX_DOT][MAX_DOT]={
	{	// S
		{1,1,1,1,1,1,1,1},
		{1,1,0,0,0,0,0,0},
		{1,1,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,1,1},
		{0,0,0,0,0,0,1,1},
		{1,1,1,1,1,1,1,1}
	},
	{	// T
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,1,1,0,0,0},
		{0,0,0,1,1,0,0,0},
		{0,0,0,1,1,0,0,0},
		{0,0,0,1,1,0,0,0},
		{0,0,0,1,1,0,0,0},
		{0,0,0,1,1,0,0,0}
	},
	{	// O
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1}
	},
	{	// P
		{1,1,1,1,1,1,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,0,0,0,0,0,0},
		{1,1,0,0,0,0,0,0},
		{1,1,0,0,0,0,0,0}
	},
	{	// space
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0}
	},
	{	// W
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,1,1,0,0,1},
		{1,0,0,1,1,0,0,1},
		{1,0,1,0,0,1,0,1},
		{1,1,1,0,0,1,1,1},
		{1,1,0,0,0,0,1,1}
	},
	{	// A
		{1,1,1,1,1,1,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1}
	},
	{	// R
		{1,1,1,1,1,1,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,0,1,1,0,0,0},
		{1,1,0,0,1,1,0,0},
		{1,1,0,0,0,1,1,0},
		{1,1,0,0,0,0,1,1}
	},
	{	// space
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0}
	},
};

// ASCII FONT data (0x20-0x7E) using https://xantorohara.github.io/led-matrix-editor/
const uint64_t fontArray[] = {
  0x0000000000000000, // SPACE
  0x180018183c3c1800, // !
  0x00000000286c6c00, // "
  0x6c6cfe6cfe6c6c00, // #
  0x103c403804781000, // $
  0x60660c1830660600, // %
  0xfc66a6143c663c00, // &
  0x0000000c18181800, // '
  0x6030181818306000, // (
  0x060c1818180c0600, // )
  0x006c38fe386c0000, // *
  0x0010107c10100000, // +
  0x060c0c0c00000000, // ,
  0x0000003c00000000, // -
  0x0606000000000000, // .
  0x00060c1830600000, // /
  0x3c66666e76663c00, // 0
  0x7e1818181c181800, // 1
  0x7e060c3060663c00, // 2
  0x3c66603860663c00, // 3
  0x30307e3234383000, // 4
  0x3c6660603e067e00, // 5
  0x3c66663e06663c00, // 6
  0x1818183030667e00, // 7
  0x3c66663c66663c00, // 8
  0x3c66607c66663c00, // 9
  0x0018180018180000, // :
  0x0c18180018180000, // ;
  0x6030180c18306000, // <
  0x00003c003c000000, // =
  0x060c1830180c0600, // >
  0x1800183860663c00, // ?
  0x003c421a3a221c00, // @
  0x6666667e66663c00, // A
  0x3e66663e66663e00,
  0x3c66060606663c00,
  0x3e66666666663e00,
  0x7e06063e06067e00,
  0x0606063e06067e00,
  0x3c66760606663c00,
  0x6666667e66666600,
  0x3c18181818183c00,
  0x1c36363030307800,
  0x66361e0e1e366600,
  0x7e06060606060600,
  0xc6c6c6d6feeec600,
  0xc6c6e6f6decec600,
  0x3c66666666663c00,
  0x06063e6666663e00,
  0x603c766666663c00,
  0x66361e3e66663e00,
  0x3c66603c06663c00,
  0x18181818185a7e00,
  0x7c66666666666600,
  0x183c666666666600,
  0xc6eefed6c6c6c600,
  0xc6c66c386cc6c600,
  0x1818183c66666600,
  0x7e060c1830607e00, // Z
  0x7818181818187800, // [
  0x006030180c060000, // backslash (yen)
  0x1e18181818181e00, // ]
  0x0000008244281000, // ^
  0x7e00000000000000, // _
  0x0000000060303000, // `
  0x7c667c603c000000, // a
  0x3e66663e06060600,
  0x3c6606663c000000,
  0x7c66667c60606000,
  0x3c067e663c000000,
  0x0c0c3e0c0c6c3800,
  0x3c607c66667c0000,
  0x6666663e06060600,
  0x3c18181800180000,
  0x1c36363030003000,
  0x66361e3666060600,
  0x1818181818181800,
  0xd6d6feeec6000000,
  0x6666667e3e000000,
  0x3c6666663c000000,
  0x06063e66663e0000,
  0xf0b03c36363c0000,
  0x060666663e000000,
  0x3e403c027c000000,
  0x1818187e18180000,
  0x7c66666666000000,
  0x183c666600000000,
  0x7cd6d6d6c6000000,
  0x663c183c66000000,
  0x3c607c6666000000,
  0x3c0c18303c000000, // z
  0x7018180c18187000, // {
  0x1818181818181800, // |
  0x0e18183018180e00, // }
  0x000000365c000000  // ~
};
